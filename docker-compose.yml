services:
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init-script.js:/docker-entrypoint-initdb.d/mongo-init-script.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]  # 檢查 RabbitMQ 的狀態
      interval: 5s  # 每 5 秒檢查一次
      timeout: 5s  # 5 秒內沒有回應，這次測試就會視為失敗，等待 interval 設定的時間到了後再試一次
      retries: 10
  mysql:
    image: mysql:8.0
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
  inventory-service:
    build:
      context: ./inventory-service
    image: inventory-service:latest
    ports:
      - "8071:8071"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@mongodb:27017/inventory_db?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  order-service:
    build:
      context: ./order-service
    image: order-service:latest
    ports:
      - "8072:8072"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/orders
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_started
      rabbitmq:
        condition: service_healthy
volumes:
  mongodb_data:
  rabbitmq_data:
  mysql_data: